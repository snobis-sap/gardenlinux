#!/usr/bin/env bash
set -euo pipefail

echo OSTree builder
ostree --version

OSTREE_SYSROOT=/sysroot

kernel="$(find /boot -name 'vmlinuz-*' | sort -V | tail -n 1)"
version="${kernel#*-}"

# Adapt to ostree root-fs requirements, see https://ostreedev.github.io/ostree/adapting-existing/

declare -A TOPLEVEL_LINKS=(
    ["home"]="var/home"
    ["media"]="run/media"
    ["mnt"]="var/mnt"
    ["opt"]="var/opt"
    # ["ostree"]="$OSTREE_SYSROOT/ostree"
    # ["root"]="var/roothome"
    ["srv"]="var/srv"
)

for link in "${!TOPLEVEL_LINKS[@]}"; do
    target=${TOPLEVEL_LINKS[$link]}
    echo mv $link $(dirname $target)
    mv $link $(dirname $target)
    echo ln -sf $target $link
    ln -sf $target $link
done

mv root var/roothome
ln -sf var/roothome root

ln -s sysroot/ostree ostree

echo $(date) > /timestamp

update-kernel-cmdline

mkdir -p /boot/efi/Default

for kernel in /boot/vmlinuz-*; do
	unshare --mount bash -c 'mount -t tmpfs none /sys && mount --bind /usr/bin/false /usr/bin/systemd-detect-virt && "$@"' \
	DRACUT_COMPRESS_XZ="$(command -v xz)" dracut \
	--no-hostonly \
	--force \
	--kver "${kernel#*-}" \
	--add "ostree" \
	--modules "bash dash systemd systemd-initrd kernel-modules kernel-modules-extra terminfo udev-rules dracut-systemd base fs-lib shutdown" \
	--reproducible \
	"/boot/initrd.img-${kernel#*-}"

	SYSTEMD_ESP_PATH=/boot/efi kernel-install add "${kernel#*-}" "${kernel}"
done

sed 's/boot\/efi\///' -i /boot/efi/loader/entries/*.conf

SYSTEMD_ESP_PATH=/boot/efi bootctl --no-variables install
